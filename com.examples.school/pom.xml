<project xmlns="http://maven.apache.org/POM/4.0.0"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>com.examples</groupId>
  <artifactId>com.examples.school</artifactId>
  <version>0.0.1-SNAPSHOT</version>
  <packaging>jar</packaging>

  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <maven.compiler.source>1.8</maven.compiler.source>
    <maven.compiler.target>1.8</maven.compiler.target>

    <!-- Dependencies versions -->
    <junit.version>4.13.1</junit.version>
    <assertj.swing.version>3.9.2</assertj.swing.version>
    <mockito.version>2.28.2</mockito.version>
    <mongo.driver.version>3.10.2</mongo.driver.version>
    <mongo.java.server.version>1.16.0</mongo.java.server.version>
    <testcontainers.version>1.11.3</testcontainers.version>
    <picocli.version>3.9.6</picocli.version>

    <!-- Plugins versions -->
    <jacoco.version>0.8.4</jacoco.version>
    <sonar.version>3.6.0.1398</sonar.version>
    <build.helper.version>3.0.0</build.helper.version>
    <surefire.version>2.22.2</surefire.version>
    <failsafe.version>2.22.2</failsafe.version>
    <docker.frabric8.version>0.30.0</docker.frabric8.version>

    <!-- For SonarQube -->
    <sonar.coverage.jacoco.xmlReportPaths>
      ${project.reporting.outputDirectory}/jacoco/jacoco.xml
    </sonar.coverage.jacoco.xmlReportPaths>
    <!-- Exclude non covered files -->
    <sonar.coverage.exclusions>
      **/model/*,
      **/SchoolSwingApp.*
    </sonar.coverage.exclusions>
    <!-- Also collects integration tests -->
    <sonar.junit.reportPaths>
      ${project.build.directory}/surefire-reports,
      ${project.build.directory}/failsafe-reports
    </sonar.junit.reportPaths>
    <!-- For each rule to be ignore, add another eXX and two corresponding 
      properties with eXX in the name as below -->
    <sonar.issue.ignore.multicriteria>e11,e12,e13</sonar.issue.ignore.multicriteria>
    <!-- Disable rule for "Inheritance tree of classes should not be too 
      deep" (we use inherit from Swing classes, whose inheritance
      is already deep) -->
    <sonar.issue.ignore.multicriteria.e11.ruleKey>
      squid:MaximumInheritanceDepth
    </sonar.issue.ignore.multicriteria.e11.ruleKey>
    <sonar.issue.ignore.multicriteria.e11.resourceKey>
      **/*.java
    </sonar.issue.ignore.multicriteria.e11.resourceKey>
    <!-- Disable rule for "Local variable and method parameter names should 
      comply with a naming convention" (just an example) -->
    <sonar.issue.ignore.multicriteria.e12.ruleKey>
      squid:S00117
    </sonar.issue.ignore.multicriteria.e12.ruleKey>
    <sonar.issue.ignore.multicriteria.e12.resourceKey>
      **/StudentSwingView.java
    </sonar.issue.ignore.multicriteria.e12.resourceKey>
    <!-- "Tests should include assertions" disabled on tests using AssertJ Swing
      since its assertions are not recognized as assertions -->
    <sonar.issue.ignore.multicriteria.e13.ruleKey>
      squid:S2699
    </sonar.issue.ignore.multicriteria.e13.ruleKey>
    <sonar.issue.ignore.multicriteria.e13.resourceKey>
      **/StudentSwingView*.java
    </sonar.issue.ignore.multicriteria.e13.resourceKey>
  </properties>

  <dependencies>
    <dependency>
      <groupId>org.mongodb</groupId>
      <artifactId>mongo-java-driver</artifactId>
      <version>${mongo.driver.version}</version>
    </dependency>
    <dependency>
      <!-- required to see Mongo Java Driver logs -->
      <groupId>ch.qos.logback</groupId>
      <artifactId>logback-classic</artifactId>
      <version>1.2.3</version>
    </dependency>
    <dependency>
      <groupId>info.picocli</groupId>
      <artifactId>picocli</artifactId>
      <version>${picocli.version}</version>
    </dependency>
    <dependency>
      <!-- Needed to avoid a false positive from SonarQube: https://jira.sonarsource.com/browse/SONARJAVA-2785 -->
      <groupId>com.google.code.findbugs</groupId>
      <artifactId>jsr305</artifactId>
      <version>3.0.2</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>${junit.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.assertj</groupId>
      <artifactId>assertj-swing-junit</artifactId>
      <version>${assertj.swing.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.mockito</groupId>
      <artifactId>mockito-core</artifactId>
      <version>${mockito.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>de.bwaldvogel</groupId>
      <artifactId>mongo-java-server</artifactId>
      <version>${mongo.java.server.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.testcontainers</groupId>
      <artifactId>testcontainers</artifactId>
      <version>${testcontainers.version}</version>
      <scope>test</scope>
    </dependency>
  </dependencies>

  <build>
    <plugins>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>build-helper-maven-plugin</artifactId>
        <version>${build.helper.version}</version>
        <executions>
          <execution>
            <id>add-test-source</id>
            <phase>generate-test-sources</phase>
            <goals>
              <goal>add-test-source</goal>
            </goals>
            <configuration>
              <sources>
                <source>src/it/java</source>
                <source>src/e2e/java</source>
              </sources>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-failsafe-plugin</artifactId>
        <version>${failsafe.version}</version>
        <executions>
          <execution>
            <goals>
              <goal>integration-test</goal>
              <goal>verify</goal>
            </goals>
          </execution>
          <execution>
            <id>e2e-tests</id>
            <goals>
              <goal>integration-test</goal>
              <goal>verify</goal>
            </goals>
            <configuration>
              <excludes>
                <exclude>**/*IT.java</exclude>
              </excludes>
              <includes>
                <include>**/*E2E.java</include>
              </includes>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>io.fabric8</groupId>
        <artifactId>docker-maven-plugin</artifactId>
        <version>${docker.frabric8.version}</version>
        <configuration>
          <images>
            <image>
              <name>mongo:4.0.5</name>
              <run>
                <ports>
                  <port>27017:27017</port>
                </ports>
              </run>
            </image>
          </images>
        </configuration>
        <executions>
          <execution>
            <id>docker:start</id>
            <phase>pre-integration-test</phase>
            <goals>
              <goal>start</goal>
            </goals>
          </execution>
          <execution>
            <id>docker:stop</id>
            <phase>post-integration-test</phase>
            <goals>
              <goal>stop</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
    </plugins>
    <pluginManagement>
      <plugins>
        <!-- You must run sonar:sonar explicitly
          Use profile "jacoco" to get code coverage -->
        <plugin>
          <groupId>org.sonarsource.scanner.maven</groupId>
          <artifactId>sonar-maven-plugin</artifactId>
          <version>${sonar.version}</version>
        </plugin>
      </plugins>
    </pluginManagement>
  </build>

  <profiles>
    <profile>
      <id>jacoco</id>
      <activation>
        <activeByDefault>false</activeByDefault>
      </activation>
      <build>
        <plugins>
          <plugin>
            <groupId>org.jacoco</groupId>
            <artifactId>jacoco-maven-plugin</artifactId>
            <version>${jacoco.version}</version>
            <configuration>
              <excludes>
                <exclude>**/model/*</exclude>
                <exclude>**/SchoolSwingApp.*</exclude>
              </excludes>
              <!-- Don't use the default property so that we'll do code 
                coverage only for surefire tests (not for failsafe) -->
              <propertyName>surefireArgLine</propertyName>
            </configuration>
            <executions>
              <execution>
                <goals>
                  <!-- binds by default to the phase "initialize" -->
                  <goal>prepare-agent</goal>
                  <!-- binds by default to the phase "verify" -->
                  <goal>report</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-surefire-plugin</artifactId>
            <version>${surefire.version}</version>
            <configuration>
              <!-- Code coverage for surefire tests -->
              <argLine>${surefireArgLine}</argLine>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>
</project>
